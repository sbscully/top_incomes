#!/usr/bin/env perl

use strict;
use warnings;

use lib 'lib';
use feature 'say';

use File::Slurp;
use Pipeline;
use Pipeline::Traverse qw(hashref);
use Pipeline::List qw(zip_refs_compact flatten);
use JSON::Processor;

{
  my $in = 'data/extracted.json';
  my $out = 'data/transformed.json';

  if (-f $out) { unlink $out }

  say "reading $in...";
  my $json = process_json { [ transform_top_incomes(@_) ] } read_file($in);

  say "writing output to $out...";
  write_file($out, $json);

  say "transform stage complete";
}

sub transform_top_incomes {
  my @table = @{ $_[0] };

  say "transforming $#table rows...";
  my $headers = shift @table;
  map { row_to_hashref($headers, $_) } @table;
}

# Turn a spreadsheet table row into a hashref, with the table headers as keys
sub row_to_hashref { pipeline @_ => qw(zip_refs_compact flatten hashref) }