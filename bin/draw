#!/usr/bin/env perl

use strict;
use warnings;

use lib 'lib';
use feature 'say';

use Chart::Clicker;
use Chart::Clicker::Data::DataSet;
use Chart::Clicker::Data::Series;

use File::Slurp;
use JSON::XS;

use Pipeline;
use Pipeline::Traverse qw(deref);
use Pipeline::Hash qw(where where_defined pluck);
use Pipeline::List qw(concat);
use Chain;

{
  my $in = 'data/transformed.json';
  my $out = 'data/graph.png';

  say "drawing $out";

  my $dataset = pipeline $in =>
    'decode_json_file',
    chart_dataset_builder(country => 'United Kingdom', dimension => 'Top 0.1% average income', from => 1910);

  if (-f $out) { unlink $out }

  chain('Chart::Clicker')
    ->new(width => 500, height => 250, format => 'png')
    ->add_to_datasets($dataset)
    ->write_output($out);

  say "draw stage complete";
}

sub decode_json_file {
  pipeline @_ => qw(read_file concat decode_json deref)
}

sub chart_dataset_builder {
  my %opts = @_;

  sub {
    pipeline @_ =>
      curry('where', { Country => $opts{country} }),
      curry('where_defined', $opts{dimension}),
      sub { grep { $_->{Year} >= $opts{from} } @_ },
      to_chart_clicker(keys => 'Year', values => $opts{dimension});
  }
}

sub to_chart_clicker {
  my %opts = @_;

  sub {
    pipeline @_ =>
      curry('chart_clicker_options', \%opts),
      'chart_clicker_series',
      'chart_clicker_dataset';
  }
}

sub chart_clicker_options {
  my $opts = shift;
  my @array = @_;

  (
    keys => [ pluck $opts->{keys}, @array ],
    values => [ pluck $opts->{values}, @array ],
  );
}

sub chart_clicker_series { Chart::Clicker::Data::Series->new(@_) }

sub chart_clicker_dataset { Chart::Clicker::Data::DataSet->new(series => \@_) }

